type Query {
  me: Me!
  active: Bool!
}

type Mutation {
  createFriendMutation(
    input: CreateFriendMutationInput!
  ): CreateFriendMutationPayload
}

type CreateFriendMutationPayload {
  friend: Friend!
}

input CreateFriendMutationInput {
  userId: ID!
}

scalar Url

interface User {
  id: ID!
  name: String!
}

type Friend implements User {
  id: ID!
  name: String!
}

type FriendConnection {
  totalCount: Int!
  nodes: [Friend]!
}

type Me implements User {
  id: ID!
  name: String!
  rank: Float!
  email: String
  age: Int
  active: Bool
  friends(first: Int): FriendConnection!
  notifications: [Notification]
  web: Url
}

type Notification {
  id: ID!
  title: String!
}
